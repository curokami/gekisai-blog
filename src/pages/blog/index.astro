---
import BlogCard from '../../components/BlogCard.tsx';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog'))
  .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf())
  .map(post => ({ ...post, slug: post.id }));

// ページネーション処理
const page = Number(Astro.url.searchParams.get('page') || 1);
const perPage = 9;
const totalPages = Math.ceil(posts.length / perPage);
const paginatedPosts = posts.slice((page - 1) * perPage, page * perPage);
---

<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
<Header />

<main class="px-4 py-8 max-w-7xl mx-auto">
  <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    {paginatedPosts.map((post) => (
      <BlogCard post={post} />
    ))}
  </section>

  <nav class="mt-8 flex justify-center space-x-2">
    {Array.from({ length: totalPages }).map((_, i) => {
      const p = i + 1;
      return (
        <a
          href={`/blogindex?page=${p}`}
          class={`px-3 py-1 rounded ${p === page ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}
        >
          {p}
        </a>
      );
    })}
  </nav>
</main>

<Footer />